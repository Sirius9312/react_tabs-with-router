{"version":3,"sources":["App.tsx","pages/HomePage.tsx","components/TabList.tsx","stores/TabContext.tsx","pages/TabsPage.tsx","pages/PageNotFound.tsx","Root.tsx","index.tsx"],"names":["App","getLinkClass","isActive","cn","useLocation","pathname","to","className","HomePage","TabList","tabs","tabId","useParams","selectedTab","find","tab","id","map","title","content","TabContext","React","createContext","TabProvider","children","value","Provider","TabsPage","useContext","PageNotFound","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"kPAWaA,EAAM,WACjB,IAAMC,EAAe,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SACtB,OAAOC,IAAG,cAAe,CAAE,YAAaD,GACzC,EAKD,MAFqC,UADpBE,cACOC,SAGf,cAAC,IAAD,CAAUC,GAAG,MAIpB,qCAEE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASD,GAAG,IAAIC,UAAWN,EAA3B,kBACA,cAAC,IAAD,CAASK,GAAG,QAAQC,UAAWN,EAA/B,yBAKN,qBAAKM,UAAU,UAAf,SACE,cAAC,IAAD,QAIP,EC3CYC,EAAqB,WAChC,OACE,oBAAID,UAAU,QAAd,sBAEH,E,OCIYE,EAA2B,SAAC,GAElC,IADLC,EACI,EADJA,KAEQC,EAAUC,cAAVD,MACFE,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,CAApB,IAE9B,OACE,sBAAKJ,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BAEIG,EAAKO,KAAI,SAACF,GAAD,OACP,oBAEE,UAAQ,MACRR,UAAWI,IAAUI,EAAIC,GAAK,YAAc,GAH9C,SAKE,cAAC,IAAD,CAAMV,GAAE,gBAAWS,EAAIC,IAAvB,SACGD,EAAIG,SALFH,EAAIC,GAFJ,QAef,qBAAKT,UAAU,QAAQ,UAAQ,aAA/B,UACc,OAAXM,QAAW,IAAXA,OAAA,EAAAA,EAAaM,UAAW,0BAIhC,ECtCYC,E,OAAaC,EAAMC,cAAc,CAC5CZ,KAAM,KAOKa,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAOvCC,EAAQ,CACZf,KAPW,CACX,CAAEM,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,iBAO1C,OACE,cAACC,EAAWM,SAAZ,CAAqBD,MAAOA,EAA5B,SACGD,GAGN,ECvBYG,EAAqB,WAChC,IAAQjB,EAASkB,qBAAWR,GAApBV,KAER,OACE,cAAC,EAAD,CAASA,KAAMA,GAElB,ECVYmB,EAAyB,WACpC,OACE,oBAAItB,UAAU,QAAd,2BAEH,ECGYuB,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MAEtB,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cAZf,ECJpBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.177222cc.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport {\n  NavLink,\n  Navigate,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\n\nexport const App = () => {\n  const getLinkClass = ({ isActive }:{ isActive: boolean }) => {\n    return cn('navbar-item', { 'is-active': isActive });\n  };\n\n  const location = useLocation();\n  const isHome = location.pathname === '/home';\n\n  if (isHome) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <>\n      {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={getLinkClass}>Home</NavLink>\n            <NavLink to=\"/tabs\" className={getLinkClass}>Tabs</NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <Outlet />\n      </div>\n    </>\n  );\n};\n","export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const TabList: React.FC<Props> = ({\n  tabs,\n}) => {\n  const { tabId } = useParams();\n  const selectedTab = tabs.find((tab) => tab.id === tabId);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map((tab) => (\n              <li\n                key={tab.id}\n                data-cy=\"Tab\"\n                className={tabId === tab.id ? 'is-active' : ''}\n              >\n                <Link to={`/tabs/${tab.id}`}>\n                  {tab.title}\n                </Link>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content || 'Please select a tab'}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Tab } from '../types/Tab';\n\nexport const TabContext = React.createContext({\n  tabs: [] as Tab[],\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TabProvider: React.FC<Props> = ({ children }) => {\n  const tabs = [\n    { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n    { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n    { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n  ];\n\n  const value = {\n    tabs,\n  };\n\n  return (\n    <TabContext.Provider value={value}>\n      {children}\n    </TabContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { TabList } from '../components/TabList';\nimport { TabContext } from '../stores/TabContext';\n\nexport const TabsPage: React.FC = () => {\n  const { tabs } = useContext(TabContext);\n\n  return (\n    <TabList tabs={tabs} />\n  );\n};\n","export const PageNotFound: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Route, HashRouter as Router, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { TabsPage } from './pages/TabsPage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { TabProvider } from './stores/TabContext';\n\nexport const Root = () => (\n  <Router>\n    <TabProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Route>\n      </Routes>\n    </TabProvider>\n  </Router>\n);\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}